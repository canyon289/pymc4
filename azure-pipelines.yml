trigger:
  - master

pool:
  vmImage: "ubuntu-latest"
strategy:
  matrix:
    Python36:
      python.version: "3.6"
    Python37:
      python.version: "3.7"

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "$(python.version)"
    displayName: "Use Python $(python.version)"

  - script: |
      python -m pip install --upgrade pip
      python -m pip install .
      python -m pip install -r requirements-dev.txt
      python -m pip freeze
    displayName: "Install dependencies"

  # - script: |
  #     python -m pydocstyle --convention=numpy pymc4/ tests/
  #   displayName: "pydocstyle"

  - script: |
      python -m black --check pymc4/ tests/
    displayName: "black"

  - script: |
      python -m mypy --ignore-missing-imports pymc4/
    displayName: "mypy"

  - script: |
      python -m pylint pymc4/ tests/
    displayName: "pylint"

  - script: |
      python -m pip install pytest-azurepipelines
      python -m pytest -xv --cov pymc4 --junitxml=junit/test-results.xml --cov-report xml --cov-report term --cov-report html .
    displayName: "pytest"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: "**/test-*.xml"
      testRunTitle: "Publish test results for Python $(python.version)"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/**/htmlcov"
